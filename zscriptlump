version "4.8.0"

#include "ENEMIES"

class SpawnMarineEventHandler : EventHandler
{
  int tid;
  int pptid;
  Actor pp;
  Array<Actor> friends;
  
  override void NetworkProcess (ConsoleEvent e)
  {
    if (e.Name ~== "KillMarineKeyEvent"){
      for(int i = 0; i < friends.Size(); i++){
        if(friends[i]){
          SpawnMarineEventHandler Event;
          Event = SpawnMarineEventHandler(EventHandler.Find("SpawnMarineEventHandler"));
          if(Event.pp != null){
            Event.pp.RemoveFromHash();
            Event.pp.Destroy();
          }
          friends[i].RemoveFromHash();
          friends[i].Destroy();
        }
      }
      friends.Clear();
    }
    if (e.Name ~== "TeleportMarineKeyEvent"){

      // place marines in front of player, about 3 feet, facing away
      let p = players[e.player].mo;
      int px = players[e.player].mo.pos.x;
      int py = players[e.player].mo.pos.y;
      int pz = players[e.player].mo.pos.z;
  
      int pa = p.angle;
      
      int dist = 50;
      int fx = px + cos(pa) * dist;
      int fy = py + sin(pa) * dist;
      
      // teleport all friends to you
      int i;
      bool spawnedAtLeastOne = false;
      console.printf("opa "..pa);
      int abspa = abs(pa);
      int numTurns = abspa / 360;
      if (pa < 0){
        int tmp = 360 * numTurns;
        pa = tmp + pa;
      }else{
        
      }
      //console.printf("opa "..pa);
      
      //console.printf("numturns "..numTurns);
      //console.printf("rpa "..pa);
      for(i = 0; i < friends.Size(); i++){
        if(friends[i] && friends[i].Health > 0){
          friends[i].Teleport((fx,fy,pz), pa, 0);
          friends[i].target = null;
          friends[i].goal = null;
          spawnedAtLeastOne = true;
          friends[i].Angle = pa;
          
          if(pa <= 22.5 || pa >= 337.5){
            friends[i].movedir = 0; // e
          }else if(pa > 22.5 && pa <= 67.5){
            friends[i].movedir = 1; // ne
          }else if(pa > 67.5 && pa <= 112.5){
            friends[i].movedir = 2; // n
          }else if(pa > 112.5 && pa <= 157.5){
            friends[i].movedir = 3; // nw
          }else if(pa > 157.5 && pa <= 202.5){
            friends[i].movedir = 4; // w
          }else if(pa > 202.5 && pa <= 247.5){
            friends[i].movedir = 5; // sw
          }else if(pa > 247.5 && pa <= 292.5){
            friends[i].movedir = 6; // s
          }else if(pa > 292.5 && pa < 337.5){
           friends[i].movedir = 7; // se
          }
          
          friends[i].SetStateLabel("Spawn");
        }
      }
      
      // spawn fog
      if(spawnedAtLeastOne)
      {
        friends[i-1].Teleport((fx,fy,pz), pa, 1);
      }
      
      Console.printf(friends.Size().." marines alive");
      
    }
    
    if (e.Name ~== "SpawnMarineKeyEvent")
    {    
      // calculate marine spawn position
      // in front of player, about 3 feet, facing away
      let p = players[e.player].mo;
      int px = players[e.player].mo.pos.x;
      int py = players[e.player].mo.pos.y;
      int pz = players[e.player].mo.pos.z;
      int pa = p.angle;
      int dist = 50;
      int fx = px + cos(pa) * dist;
      int fy = py + sin(pa) * dist;
   
      // spawn our friend
      Actor friend;      
	    switch(Random(1,15)){
        case 1:
          friend = Actor.Spawn('MarineAllyPistol', (fx, fy, pz));
          break;
        case 2:
          friend = Actor.Spawn('MarineAllyMG', (fx, fy, pz));
          break;
        case 3:
          friend = Actor.Spawn('MarineAllyCG', (fx, fy, pz));
          break;
        case 4:
          friend = Actor.Spawn('MarineAllySG', (fx, fy, pz));
          break;
        case 5:
          friend = Actor.Spawn('MarineAllyMinigun', (fx, fy, pz));
          break;
        case 6:
          friend = Actor.Spawn('MarineAllyPlasma', (fx, fy, pz));
          break;
        case 7:
          friend = Actor.Spawn('MarineAllyRocket', (fx, fy, pz));
          break;
        case 8:
          friend = Actor.Spawn('MarineAllyBFG9000', (fx, fy, pz));
          break;
        case 9:
          friend = Actor.Spawn('MarineAllySSG', (fx, fy, pz));
          break;
        case 10:
          friend = Actor.Spawn('MarineAllyRailgun', (fx, fy, pz));
          break;
        case 11:
          friend = Actor.Spawn('MarineAllyHSMissile', (fx, fy, pz));
          break;
        case 12:
          friend = Actor.Spawn('MarineAllyGL', (fx, fy, pz));
          break;
        case 13:
          friend = Actor.Spawn('MarineAllySniper', (fx, fy, pz));
          break;
        case 14:
          friend = Actor.Spawn('MarineAllyBFG10K', (fx, fy, pz));
          break;
        case 15:
          friend = Actor.Spawn('MarineAllyFlamethrower', (fx, fy, pz));
          break;
        case 16:
          friend = Actor.Spawn('MarineAllyFist', (fx, fy, pz));
          break;
        case 17:
          friend = Actor.Spawn('MarineAllyChainsaw', (fx, fy, pz));
          break;
      }
      
      // turn our friend so he's facing away from the player
      pa = abs(pa);
      int numTurns = pa / 360;
      int tmp = 360 * numTurns;
      pa = pa - tmp;
      
      friend.Angle = pa;
      if(pa <= 22.5 || pa >= 337.5){
        friend.movedir = 0; // e
      }else if(pa > 22.5 && pa <= 67.5){
        friend.movedir = 1; // ne
      }else if(pa > 67.5 && pa <= 112.5){
        friend.movedir = 2; // n
      }else if(pa > 112.5 && pa <= 157.5){
        friend.movedir = 3; // nw
      }else if(pa > 157.5 && pa <= 202.5){
        friend.movedir = 4; // w
      }else if(pa > 202.5 && pa <= 247.5){
        friend.movedir = 5; // sw
      }else if(pa > 247.5 && pa <= 292.5){
        friend.movedir = 6; // s
      }else if(pa > 292.5 && pa < 337.5){
        friend.movedir = 7; // se
      }
      
      // wake him up and give him an item that
      // deletes his patrolpoint when he sees his first enemy
      //friend.Activate();
      //friend.Activate(p);
      //friend.GiveInventoryType("PatrolPointDeleter");
      
      // when spawning friend, he should walk in straight line away from player
      // so we spawn a patrolpoint for him to go chase 
      // once he sees an enemy, the patrolpoint will disappear and he will
      // forget all about it
      //dist = 5000;
      //int tx = px + cos(pa) * dist;
      //int ty = py + sin(pa) * dist;
	    //pp = Actor.Spawn('PatrolPoint', (tx, ty, pz));
      //tid = Level.FindUniqueTID();
      //pptid = Level.FindUniqueTID();
      //friend.changeTID(tid);
      //pp.changeTID(pptid);
      //Thing_SetGoal(tid, pptid, 0, 0);

      // store our friends in an array, so we can teleport or remove them later
      friends.Push(friend);
      Console.printf(friends.Size().." marines");
      
      // loop example, loops through all monsters
      /*let it = ThinkerIterator.Create("Actor");
      Actor mo;
      it.Reinit();
      while (mo = Actor(it.Next()))
      {
        if (mo && mo.bIsMonster && !mo.bFriendly)
        {
          mo.changetid(69696970);
          mo.LookForTid(69696969);
        }
      }*/
    }

  }
}

class whoKilledFren : EventHandler
{
  override void WorldThingDied(WorldEvent e){
    if(e.Thing.GetSpecies() == "MarineAlly" && e.Thing.bIsMonster == true) {
    
      SpawnMarineEventHandler Event;
      Event = SpawnMarineEventHandler(EventHandler.Find("SpawnMarineEventHandler"));
      int fren = Event.friends.Find(e.Thing);
      if (fren != Event.friends.Size()){
        Event.friends.Delete(fren);
      }
      
      //let p = players[e.player].mo;
      int fx = e.Thing.pos.x;
      int fy = e.Thing.pos.y;
      int pz = e.Thing.pos.z;
      int pa = e.Thing.angle;
   
      // spawn our friend
      Actor friend;      
	    switch(Random(1,15)){
        case 1:
          friend = Actor.Spawn('MarineAllyPistol', (fx, fy, pz));
          break;
        case 2:
          friend = Actor.Spawn('MarineAllyMG', (fx, fy, pz));
          break;
        case 3:
          friend = Actor.Spawn('MarineAllyCG', (fx, fy, pz));
          break;
        case 4:
          friend = Actor.Spawn('MarineAllySG', (fx, fy, pz));
          break;
        case 5:
          friend = Actor.Spawn('MarineAllyMinigun', (fx, fy, pz));
          break;
        case 6:
          friend = Actor.Spawn('MarineAllyPlasma', (fx, fy, pz));
          break;
        case 7:
          friend = Actor.Spawn('MarineAllyRocket', (fx, fy, pz));
          break;
        case 8:
          friend = Actor.Spawn('MarineAllyBFG9000', (fx, fy, pz));
          break;
        case 9:
          friend = Actor.Spawn('MarineAllySSG', (fx, fy, pz));
          break;
        case 10:
          friend = Actor.Spawn('MarineAllyRailgun', (fx, fy, pz));
          break;
        case 11:
          friend = Actor.Spawn('MarineAllyHSMissile', (fx, fy, pz));
          break;
        case 12:
          friend = Actor.Spawn('MarineAllyGL', (fx, fy, pz));
          break;
        case 13:
          friend = Actor.Spawn('MarineAllySniper', (fx, fy, pz));
          break;
        case 14:
          friend = Actor.Spawn('MarineAllyBFG10K', (fx, fy, pz));
          break;
        case 15:
          friend = Actor.Spawn('MarineAllyFlamethrower', (fx, fy, pz));
          break;
        case 16:
          friend = Actor.Spawn('MarineAllyFist', (fx, fy, pz));
          break;
        case 17:
          friend = Actor.Spawn('MarineAllyChainsaw', (fx, fy, pz));
          break;
      }
      
      // turn our friend so he's facing away from the player
      friend.Angle = pa;
      
      // wake him up and give him an item that
      // deletes his patrolpoint when he sees his first enemy
      //friend.SetStateLabel("See");
      //friend.A_Wander(CHF_NORANDOMTURN);
      //friend.GiveInventoryType("PatrolPointDeleter");
      
      // when spawning friend, he should walk in straight line away from player
      // so we spawn a patrolpoint for him to go chase 
      // once he sees an enemy, the patrolpoint will disappear and he will
      // forget all about it
      //int dist = 5000;
      //int tx = fx + cos(pa) * dist;
      //int ty = fy + sin(pa) * dist;	  
	    //Event.pp = Actor.Spawn('PatrolPoint', (tx, ty, pz));
      //Event.tid = Level.FindUniqueTID();
      //Event.pptid = Level.FindUniqueTID();
      //friend.changeTID(Event.tid);
      //Event.pp.changeTID(Event.pptid);
      //Thing_SetGoal(Event.tid, Event.pptid, 0, 0);

      // store our friends in an array, so we can teleport or remove them later
      Event.friends.Push(friend);
      friend.Teleport((fx,fy,pz), pa, 1);
      String died = e.Thing.GetClassName();
      died.replace("MarineAlly", "");
      String replacement = friend.GetClassName();
      replacement.replace("MarineAlly", "");
      console.printf("-"..died.." +"..replacement);
      
    }else if(e.Thing.bIsMonster == true){
      if(e.inflictor != null && e.inflictor.getspecies() == "MarineAlly" && e.Thing.target != null){
        e.Thing.target.goal = e.thing;
        console.printf("setting target for "..e.Thing.target.getclassname());
      }
    }
  }
}

class MarineAllyPistol : MarineAlly
{
  Default
  {
    OBITUARY "%o was killed by an ally's reckless shooting!";
    ATTACKSOUND "ALPist/FIRE";
  }
  States
  {
    Spawn:
      ALY2 AABBCCDD 3
      {
        self.TryWalk();
      }
      ALY2 AABB 0 A_Look;
      loop;
    See:
      ALY2 AABBCCDD 3 A_Chase;
      //ALY2 A 0 A_CheckSight("A02Patrol");
      loop;
    A02Patrol:
      ALY2 AABBCCDD 3 A_Wander(CHF_NORANDOMTURN);
      ALY2 A 0 A_Look;
      Loop;
    Missile:
      ALY2 E 7 A_FaceTarget;
      ALY2 E 1 A_Jump(96, "10mmBurst");
      ALY2 F 0 A_AlertMonsters(0, AMF_TARGETEMITTER);
      ALY2 F 2 BRIGHT A_CustomBulletAttack(4.5,5.5,1,3,"MarineAllyCustomBulletPuff");
      ALY2 E 3;
      goto See;
    10mmBurst:
      ALY2 F 3 BRIGHT A_CustomBulletAttack(4.5,5.5,1,3,"MarineAllyCustomBulletPuff");
      ALY2 F 0 A_AlertMonsters(0, AMF_TARGETEMITTER);
      ALY2 E 1;
      ALY2 F 3 BRIGHT A_CustomBulletAttack(4.5,5.5,1,3,"MarineAllyCustomBulletPuff");
      ALY2 E 1;
      ALY2 F 3 BRIGHT A_CustomBulletAttack(4.5,5.5,1,3,"MarineAllyCustomBulletPuff");
      ALY2 E 3;
      goto See;
    Pain:
      ALY2 G 5 A_Pain;
      ALY2 G 3;
      goto See;
    Death:
      ALY2 H 3;
      ALY2 I 3 A_Scream;
      ALY2 J 3;
      ALY2 KLM 5;
      ALY2 N -1 A_NoBlocking;
      Stop;
    XDeath:
      ALY2 O 5;
      ALY2 P 5 A_XScream;
      ALY2 QRSTUV 5;
      ALY2 W -1 A_NoBlocking;
      Stop;
  }
}

class MarineAllyMG : MarineAlly
{
  Default
  {
    OBITUARY "%o was just careless around that Machinegunner!";
    ATTACKSOUND "ALMG/Fire";
  }
  States
  {
    Spawn:
      ALY3 AABBCCDD 3 //A_Look;
      {
        self.TryWalk();
      }
      ALY3 AABB 0 A_Look;
      Loop;
    See:
      ALY3 AABBCCDD 3 A_Chase;
      //ALY3 A 0 A_CheckSight("A03Patrol");
      loop;
    A03Patrol:
      ALY3 AABBCCDD 3 A_Wander;
      ALY3 A 0 A_Look;
      loop;
    Missile:
      ALY3 E 7 A_FaceTarget;
      ALY3 E 0 A_Jump(96,"MGRapidFireShot");
      ALY3 F 0 A_AlertMonsters(0, AMF_TARGETEMITTER);
      ALY3 F 0 A_FaceTarget;
      ALY3 F 2 BRIGHT A_CustomBulletAttack(3,4,1,4,"MarineAllyCustomBulletPuff");
      ALY3 E 2;
      ALY3 F 2 BRIGHT A_CustomBulletAttack(5,6,1,4,"MarineAllyCustomBulletPuff");
      ALY3 E 2;
      ALY3 F 2 BRIGHT A_CustomBulletAttack(7,8,1,4,"MarineAllyCustomBulletPuff");
      ALY3 E 7;
      goto See;
    MGRapidFireShot:
      ALY3 E 7 A_FaceTarget;
      ALY3 E 0 A_FaceTarget;
      ALY3 F 0 A_AlertMonsters(0, AMF_TARGETEMITTER);
      ALY3 F 3 BRIGHT A_CustomBulletAttack(3,4,1,4,"MarineAllyCustomBulletPuff");
      ALY3 E 1 A_CPosRefire;
      goto MGRapidFireShot+2;
    Pain:
      ALY3 G 5 A_Pain;
      ALY3 G 3;
      goto See;
    Death:
      ALY3 H 3;
      ALY3 I 3 A_Scream;
      ALY3 J 3;
      ALY3 KLM 5;
      ALY3 N -1 A_NoBlocking;
      Stop;
    XDeath:
      ALY3 O 5;
      ALY3 P 5 A_XScream;
      ALY3 QRSTUV 5;
      ALY3 W -1 A_NoBlocking;
      Stop;
  }
}

class MarineAllyCG : MarineAlly
{
  Default
  {
    Health 600;
    //Speed 10;
    PainChance 48;
    OBITUARY "%o was caught in a Ally's Crossfire!";
    ATTACKSOUND "chainguy/attack";
    //dropItem "Chaingun";
  }
  States
  {
    Spawn:
      ALY4 AABBCCDD 3 //A_Look;
      {
        self.TryWalk();
      }
      ALY4 AABB 0 A_Look;
      loop;
    See:
      ALY4 AABBCCDD 3 A_Chase;
      //ALY4 A 0 A_CheckSight("A04Patrol");
      loop;
    A04Patrol:
      ALY4 AABBCCDD 3 A_Wander;
      ALY4 A 0 A_Look;
      loop;
    Missile:
      ALY4 X 10 A_FaceTarget;
      ALY4 E 1 A_FaceTarget;
      ALY4 FE 3 BRIGHT A_CustomBulletAttack(5, 4, 1, 5, "MarineAllyCustomBulletPuff");
      ALY4 F 0 A_AlertMonsters(0, AMF_TARGETEMITTER);
      ALY4 F 1 A_CPosRefire;
      goto Missile+2;
    Pain:
      ALY4 G 5 A_Pain;
      ALY4 G 3;
      goto See;
    Death:
      ALY4 H 3;
      ALY4 I 3 A_Scream;
      ALY4 J 3;
      ALY4 KLM 5;
      ALY4 N -1 A_NoBlocking;
      Stop;
    XDeath:
      ALY4 O 5;
      ALY4 P 5 A_XScream;
      ALY4 QRSTUV 5;
      ALY4 W -1 A_NoBlocking;
      Stop;
  }
}

class MarineAllySG : MarineAlly
{
  Default
  {
    //Speed 11;
    PainChance 48;
    OBITUARY "%o was shot by an ally!";
    ATTACKSOUND "Shotguy/attack";
    //dropItem "Shotgun";
  }
  States
  {
    Spawn:
      ALY5 AABBCCDD 3 //A_Look;
      {
        self.TryWalk();
      }
      ALY5 AABB 0 A_Look;
      loop;
    See:
      ALY5 AABBCCDD 3 A_Chase;
      //ALY5 A 0 A_CheckSight("AL05Patrol");
      loop;
    AL05Patrol:
      ALY5 AABBCCDD 3 A_Wander;
      ALY5 A 0 A_Look;
      loop;
    Missile:
      ALY5 E 10 FAST A_FaceTarget; //Will look at target & try to shoot faster then usual
      ALY5 F 0 A_AlertMonsters(0, AMF_TARGETEMITTER);
      ALY5 F 3 BRIGHT A_CustomBulletAttack (5.3, 4.5, 7, 3, "MarineAllyCustomBulletPuff", 0);
      ALY5 E 10;
      goto See;
    Pain:
      ALY5 G 5 A_Pain;
      ALY5 G 3;
      goto See;
    Death:
      ALY5 H 3;
      ALY5 I 3 A_Scream;
      ALY5 J 3;
      ALY5 KLM 5;
      ALY5 N -1 A_NoBlocking;
      Stop;
    XDeath:
      ALY5 O 5;
      ALY5 P 5 A_XScream;
      ALY5 QRSTUV 5;
      ALY5 W -1 A_NoBlocking;
      Stop;
  }
}

class MarineAllyMinigun : MarineAlly
{
  Default
  {
    Health 600;
    GibHealth -35;
    //Speed 10;
    PainChance 52;
    OBITUARY "%o was turned into mincemeat by an ally's Minigun!";
    ATTACKSOUND "ALMini/ALMinigun";
    //dropItem "ClipBox";
  }
  States
  {
    Spawn:
      ALY6 AABBCCDD 3 //A_Look;
      {
        self.TryWalk();
      }
      ALY6 AABB 0 A_Look;
      loop;
    See:
      ALY6 AABBCCDD 3 A_Chase;
      //ALY6 A 0 A_CheckSight("A06Patrol");
      loop;
    A06Patrol:
      ALY6 AABBCCDD 3 A_Wander;
      ALY6 A 0 A_Look;
      loop;
    Missile:
      ALY6 E 10 A_FaceTarget;
      ALY6 F 5 A_FaceTarget;
      ALY6 F 0 A_AlertMonsters(0, AMF_TARGETEMITTER);
      ALY6 G 2 BRIGHT A_CustomBulletAttack(5, 4, 1, 5, "MarineAllyCustomBulletPuff");
      ALY6 F 2 BRIGHT A_CustomBulletAttack(5, 4, 1, 5, "MarineAllyCustomBulletPuff");
      ALY6 F 0 A_SpidRefire;
      goto Missile+2;
    Pain:
      ALY6 H 5 A_Pain;
      ALY6 H 3;
      goto See ;
    Death:
      ALY6 I 3;
      ALY6 J 3 A_Scream;
      ALY6 K 3;
      ALY6 LMN 5;
      ALY6 O -1 A_NoBlocking;
      Stop;
    XDeath:
      ALY6 P 5;
      ALY6 Q 5 A_XScream;
      ALY6 RSTUVW 5;
      ALY6 X -1 A_NoBlocking;
      Stop;
  }
}

class MarineAllyChainsaw : MarineAlly
{
  Default
  {
    Health 800;
    GibHealth -45;
    Radius 20;
    Height 56;
    //Speed 18;
    PainChance 44;
    MeleeThreshold 64;
    MeleeRange 64;
    OBITUARY "%o was stupid enough to stand in front of a chainsaw attack!";
    SEESOUND "ALCSaw/Sight";
    //dropItem "Chainsaw";
    -AVOIDMELEE;
  }
  States
  {
    Spawn:
      ALY7 AABB 0 A_Look;
      loop;
    See: //Originally Switched Chainsaw off & Patrolled from Spawn but restarting the Chainsaw everytime is pointless
      ALY7 AA 4 A_Chase;
      ALY7 B 0 A_StartSound("weapons/sawidle");
      ALY7 BB 4 A_Chase;
      ALY7 C 0 A_StartSound("weapons/sawidle");
      ALY7 CC 4 A_Chase;
      ALY7 D 0 A_StartSound("weapons/sawidle");
      ALY7 DD 4 A_Chase;
      ALY7 A 0 A_StartSound("weapons/sawidle");
      goto See; //Adding a Patrol set up before or after "See" didn't switch the Chainsaw off until the player was out of sight
    Melee:
      ALY7 E 1 A_FaceTarget;
      ALY7 F 0 A_AlertMonsters(0, AMF_TARGETEMITTER);
      ALY7 F 9 Fast A_M_Saw("weapons/sawfull","weapons/sawhit",3,"MarineAllyCustomBulletPuff");
      ALY7 F 0 A_JumpIfCloser(64,"Melee"); //The Marine will now keep attacking until target is dead or manages to escape.
      goto See;
    Pain:
      ALY7 G 5 A_Pain;
      ALY7 G 3;
      goto See;
    Death:
      ALY7 H 3;
      ALY7 I 3 A_Scream;
      ALY7 J 5;
      ALY7 KLM 5;
      ALY7 N -1 A_NoBlocking;
      Stop;
    XDeath:
      ALY7 O 5;
      ALY7 P 5 A_XScream;
      ALY7 Q 5;
      ALY7 RSTUV 5;
      ALY7 W -1 A_NoBlocking;
      Stop;
  }
}

class MarineAllyPlasma : MarineAlly
{
  Default
  {
    //Speed 12;
    PainChance 52;
    OBITUARY "%o was vapourised by friendly fire!";
    ATTACKSOUND "grunt/attack";
    //dropItem "PlasmaRifle";
  }
  States
  {
    Spawn:
      ALY8 AABBCCDD 3 //A_Look;
      {
        self.TryWalk();
      }
      ALY8 AABB 0 A_Look;
      loop;
    See:
      ALY8 AABBCCDD 3 A_Chase;
      //ALY8 A 0 A_CheckSight("A08Patrol");
      Loop;
    A08Patrol:
      ALY8 AABBCCDD 3 A_Wander;
      ALY8 A 0 A_Look;
      Loop;
    Missile:
      ALY8 E 10 A_FaceTarget;
      TNT1 A 0 A_FaceTarget;
      ALY8 F 1 BRIGHT A_SpawnProjectile("MarineAllyCustomPlasmaBall");
      ALY8 F 0 A_AlertMonsters(0, AMF_TARGETEMITTER);
      ALY8 E 1 A_MonsterRefire(0, "See");
      goto Missile+2;
    Pain:
      ALY8 G 5 A_Pain;
      ALY8 G 3;
      goto See;
    Death:
      ALY8 H 3 A_Scream;
      ALY8 J 3;
      ALY8 KLM 5;
      ALY8 N -1 A_NoBlocking;
      Stop;
    XDeath:
      ALY8 O 5;
      ALY8 P 5 A_XScream;
      ALY8 QRSTUV 5;
      ALY8 W -1 A_NoBlocking;
      Stop;
  }
}

class MarineAllyRocket : MarineAlly
{
  Default
  {
    Health 600;
    //Speed 9;
    PainChance 54;
    OBITUARY "%o was blown up after an ally's rocket exploded!";
    //dropItem "RocketLauncher";
  }
  States
  {
    Spawn:
      ALY9 AABBCCDD 3 //A_Look;
      {
        self.TryWalk();
      }
      ALY9 AABB 0 A_Look;
      loop;
    See:
      ALY9 AABBCCDD 3 A_Chase;
      //ALY9 A 0 A_CheckSight("A09Patrol");
      Loop;
    A09Patrol:
      ALY9 AABBCCDD 3 A_Wander;
      ALY9 A 0 A_Look;
      Loop;
    Missile:
      //ALY9 E 0 A_JumpIfCloser(360,"CancelAttack");
      ALY9 E 0 A_Jump(128,"Missile2");
      ALY9 E 10 A_FaceTarget;
      ALY9 F 10 BRIGHT A_SpawnProjectile("MarineAllyCustomRocket",24,8);
      ALY9 F 0 A_AlertMonsters(0, AMF_TARGETEMITTER);
      ALY9 E 10 A_FaceTarget;
      goto See;
    Missile2:
      ALY9 E 10 A_FaceTarget;
      ALY9 F 10 BRIGHT A_SpawnProjectile("MarineAllyCustomRocket",24,8);
      ALY9 F 0 A_AlertMonsters(0, AMF_TARGETEMITTER);
      ALY9 E 5;
      ALY9 E 10 A_FaceTarget;
      ALY9 F 10 BRIGHT A_SpawnProjectile("MarineAllyCustomRocket",24,8);
      ALY9 E 5;
      ALY9 E 10 A_FaceTarget;
      ALY9 F 10 BRIGHT A_SpawnProjectile("MarineAllyCustomRocket",24,8);
      ALY9 E 10 A_FaceTarget;
      goto See;
    CancelAttack:
      ALY9 A 0 Fast A_FaceTarget;
      ALY9 DCBA 4 Fast A_Recoil(6);
      goto See;
    Pain:
      ALY9 G 5 A_Pain;
      ALY9 G 3;
      goto See;
    Death:
      ALY9 H 3;
      ALY9 I 3 A_Scream;
      ALY9 J 3;
      ALY9 KLM 5;
      ALY9 N -1 A_NoBlocking;
      Stop;
    XDeath:
      ALY9 O 5;
      ALY9 P 5 A_XScream;
      ALY9 QRSTUV 5;
      ALY9 W -1 A_NoBlocking;
      Stop;
  }
 }

class MarineAllyBFG9000 : MarineAlly
{
  Default
  {
    Health 1000;
    GibHealth -45;
    //Speed 8;
    PainChance 52;
    OBITUARY "%o was wiped out by a BFG Blast!";
    //dropItem "BFG9000";
  }
  States
  {
    Spawn:
      AL10 AABBCCDD 3 //A_Look;
      {
        self.TryWalk();
      }
      AL10 AABB 0 A_Look;
      loop;
    See:
      AL10 AABBCCDD 3 A_Chase;
      //AL10 A 0 A_CheckSight("A10Patrol");
      Loop;
    A10Patrol:
      AL10 AABBCCDD 3 A_Wander;
      AL10 A 0 A_Look;
      loop;
    Missile:
      AL10 E 0 A_FaceTarget;
      AL10 E 20 A_StartSound ("weapons/bfgf");
      AL10 F 0 A_AlertMonsters(0, AMF_TARGETEMITTER);
      AL10 F 10 Bright;
      AL10 F 10 Bright A_SpawnProjectile("MarineAllyCustomBFGBall");
      AL10 E 20;
      goto See;
    Pain:
      AL10 G 3;
      AL10 G 3 A_Pain;
      goto See;
    Death:
      AL10 H 3;
      AL10 I 3 A_Scream;
      AL10 J 3;
      AL10 KLM 5;
      AL10 N -1 A_NoBlocking;
      Stop;
    XDeath:
      AL10 O 5;
      AL10 P 5 A_XScream;
      AL10 QRSTU 5;
      AL10 V -1 A_NoBlocking;
      Stop;
  }
}

class MarineAllySSG : MarineAlly
{
  Default
  {
    Health 600;
    //Speed 10;
    PainChance 52;
    OBITUARY "%o was blown in two by an ally's Super-Shotgun!";
    ATTACKSOUND "ALSSG/Fire";
    //dropItem "SuperShotgun";
  }
  States
  {
    Spawn:
      AL11 AABBCCDD 3 //A_Look;
      {
        self.TryWalk();
      }
      AL11 AABB 0 A_Look;
      loop;
    See:
      AL11 AABBCCDD 3 A_Chase;
      //AL11 A 0 A_CheckSight("A11Patrol");
      loop;
    A11Patrol:
      AL11 AABBCCDD 3 A_Wander;
      AL11 A 0 A_Look;
      loop;
    Missile:
      AL11 E 10 A_FaceTarget;
      AL11 F 0 A_AlertMonsters(0, AMF_TARGETEMITTER);
      AL11 F 3 BRIGHT A_CustomBulletAttack(11.2, 7.1, 20, 3, "MarineAllyCustomBulletPuff");
      AL11 E 20;
      AL11 A 10 A_FaceTarget;
      goto See;
    Pain:
      AL11 G 5 A_Pain;
      AL11 G 3;
      goto See;
    Death:
      AL11 H 3;
      AL11 I 3 A_Scream;
      ALY5 J 3;
      ALY5 KLM 5;
      ALY5 N -1 A_NoBlocking;
      Stop;
    XDeath:
      AL11 O 5;
      AL11 P 5 A_XScream;
      AL11 QRSTUV 5;
      AL11 W -1 A_NoBlocking;
      Stop;
  }
}

class MarineAllyRailgun : MarineAlly
{
  Default
  {
    Health 600;
    //Speed 12;
    OBITUARY "%o was railed by a marine.";
    AttackSound "weapons/railgf";
    //dropitem "Cell";
  }
  States
  {
    Spawn:
      AL12 AABBCCDD 3 //A_Look;
      {
        self.TryWalk();
      }
      AL12 AABB 0 A_Look;
      loop;
    See:
      AL12 AABBCCDD 3 A_Chase;
      //AA12 A 0 A_CheckSight("A12Patrol");
      loop;
    A12Patrol:
      AL12 AABBCCDD 3 A_Wander;
      AL12 A 0 A_Look;
      Loop;
    Missile: //Note: Default RailAttack damage is 100.
      AL12 E 10 A_FaceTarget;
      //AL12 E 0 A_JumpIfCloser(320,"CancelAttack");
      //AL12 E 10 A_FaceTarget;
      AL12 F 0 A_AlertMonsters(0, AMF_TARGETEMITTER);
      AL12 F 8 Bright A_CustomRailgun (random(50,100),0,"4B0082","4682B4",0,1,0, "MarineAllyCustomBulletPuff");
      AL12 E 8 A_SpidRefire;
      goto Missile+1;
    CancelAttack: //Cancels as this is intended to be a Sniper based Marine
      AL12 A 0 Fast A_FaceTarget;
      AL12 DCBA 4 Fast A_Recoil(6);
      goto See;
    Pain:
      AL12 G 5 A_Pain;
      AL12 G 3;
      goto See;
    Death:
      AL12 H 3;
      AL12 I 3 A_Scream;
      AL12 JKLM 5;
      AL12 N -1 A_NoBlocking;
      Stop;
    XDeath:
      AL12 O 5;
      AL12 P 5 A_XScream;
      AL12 Q 5;
      AL12 RSTUV 5;
      AL12 W -1 A_NoBlocking;
      Stop;
  }
}

class MarineAllyHSMissile : MarineAlly
{
  Default
  {
    //Speed 9;
    PainChance 52;
    OBITUARY "Your Ally's homing missile hit the wrong target!";
    //dropItem "RocketAmmo", 256;
    //dropItem "RocketLauncher", 128;
  }
  States
  {
    Spawn:
      AL13 AABBCCDD 3 //A_Look;
      {
        self.TryWalk();
      }
      AL13 AABB 0 A_Look;
      loop;
    See:
      AL13 AABBCCDD 3 A_Chase;
      //AL13 A 0 A_CheckSight("A13Patrol");
      loop;
    A13Patrol:
      AL13 AABBCCDD 3 A_Wander;
      AL13 A 0 A_Look;
      Loop;
    Missile:
      AL13 E 15 A_FaceTarget;
      //AL13 E 0 A_JumpIfCloser(360,"CancelAttack");
      AL13 E 5 A_StartSound("Ally/SeekerReady");
      AL13 E 5 A_FaceTarget;
      AL13 E 0 A_StartSound("Ally/Seeker");
      AL13 F 8 Bright A_SpawnProjectile("HeatSeekingMissile",32,16);
      AL13 F 0 A_AlertMonsters(0, AMF_TARGETEMITTER);
      AL13 E 20 A_FaceTarget;
      goto See;
    CancelAttack:
      AL13 A 0 Fast A_FaceTarget;
      AL13 DCBA 4 Fast A_Recoil(6);
      goto See;
    Pain:
      AL13 G 5 A_Pain;
      AL13 G 3;
      goto See;
    Death:
      AL13 H 3;
      AL13 I 3 A_Scream;
      AL13 JKLM 5;
      AL13 N -1 A_NoBlocking;
      Stop;
    XDeath:
      TNT1 A 0
      {
        bNoGravity = true;
      }
      AL13 O 5;
      AL13 P 5 A_XScream;
      AL13 Q 5;
      AL13 RSTUV 5;
      AL13 W -1 A_NoBlocking;
      Stop;
  }
}

class HeatSeekingMissile : Actor
{
  Default
  {
    Radius 11;
    Height 8;
    Speed 25;
    Damage 50;
    Projectile;
    Species "MarineAlly";
    DamageType "MarineAlly";
    DamageFactor "MarineAlly", 0.0;
    +SEEKERMISSILE
    +RANDOMIZE
    +DEHEXPLOSION
    +ROCKETTRAIL
    +SCREENSEEKER
    +MTHRUSPECIES
    SeeSound "Ally/Seeker";
    DeathSound "Seeker/Explode";
    Decal "Scorch";
  }
  States
  {
    Spawn:
      HRKT A 1 bright A_SeekerMissile(9,6,SMF_LOOK|SMF_CURSPEED,50,10);
      HRKT A 0 A_SpawnItemEx ("MissileTrail", 3, 0, 0, 1);
      loop;
    Death:
      FX08 A 6 bright A_Explode(96,128);
      FX08 BCDEFGH 4 bright;
      Stop;
  }
}

class MissileTrail : Actor
{
  Default
  {
    Projectile;
    +NoClip
    RenderStyle "Add";
    Alpha 0.4;
  }
  States
  {
    Spawn:
      FX04 ABCDE 1 Bright;
      Stop;
  }
}

class MarineAllyGL : MarineAlly
{
  Default
  {
    Health 600;
    GibHealth -45;
    //Speed 12;
    PainChance 96;
    MaxTargetRange 256;
    OBITUARY "%o was blown up by a marine's grenade.";
    //dropItem "RocketAmmo";
  }
  States
  {
    Spawn:
      AL14 AABBCCDD 3 //A_Look;
      {
        self.TryWalk();
      }
      AL14 AABB 0 A_Look;
      loop;
    See:
      AL14 AABBCCDD 3 A_Chase;
      //AL14 A 0 A_CheckSight("A14Patrol");
      loop;
    A14Patrol:
      AL14 AABBCCDD 3 A_Wander;
      AL14 A 0 A_Look;
      loop;
    Missile:
      AL14 E 10 A_FaceTarget;
      //AL14 E 0 A_JumpIfCloser(360,"CancelAttack");
      AL14 F 3 A_StartSound("Ally/Grenfire");
      AL14 F 7 Bright A_SpawnProjectile("MarineGrenade");
      AL14 F 0 A_AlertMonsters(0, AMF_TARGETEMITTER);
      AL14 E 5 A_StartSound("Ally/Reload1");
      AL14 E 5 A_StartSound("Ally/Reload2");
      AL14 E 5 A_StartSound("Ally/Reload3");
      goto See;
    CancelAttack:
      AL14 A 0 Fast A_FaceTarget;
      AL14 DCBA 4 Fast A_Recoil(6);
      goto See;
    Pain:
      AL14 G 3;
      AL14 G 3 A_Pain;
      goto See;
    Death:
      AL14 H 3;
      AL14 I 3 A_Scream;
      AL14 JKLM 5;
      AL14 N -1 A_NoBlocking;
      Stop;
    XDeath:
      AL14 O 5;
      AL14 P 5 A_XScream;
      AL14 Q 5;
      AL14 RSTUV 5;
      AL14 W -1 A_NoBlocking;
      Stop;
  }
}

class MarineGrenade : Actor
{
  Default
  {
    Radius 11;
    Height 8;
    Speed 25;
    Damage 30;
    BounceType "Hexen";
    SeeSound "Ally/GrenadeBounce";
    DeathSound "Ally/GrenadeBang";
    OBITUARY "%o was blown up by a marine's grenade.";
    Scale 1;
    PROJECTILE;
    Species "MarineAlly";
    DamageType "MarineAlly";
    DamageFactor "MarineAlly", 0.0;
    -NOGRAVITY
    +LOWGRAVITY
    +ROCKETTRAIL
    +MTHRUSPECIES
    +THRUSPECIES
    +ALLOWTHRUFLAGS
  }
  States
  {
    Spawn:
      MGRN A 0;
      MGRN A 4;
      MGRN A 24;
      goto Death;
    Death:
      MISL B 8 bright A_Explode(128,96,XF_EXPLICITDAMAGETYPE,false,0,0,10,"MarineAllyCustomBulletPuff","MarineAlly");
      MISL C 6 bright;
      MISL D 4 bright;
      Stop;
  }
}

class MarineAllyBFG10K : MarineAlly
{
  Default
  {
    Health 800;
    //Speed 8;
    PainChance 76;
    OBITUARY "%o was wiped out by manic BFG Blasts!";
    //dropItem "Cellpack"; //Add the BFG-10K if you have one
  }
  States
  {
    Spawn:
      AL15 AABBCCDD 3 //A_Look;
      {
        self.TryWalk();
      }
      AL15 AABB 0 A_Look;
      loop;
    See:
      AL15 AABBCCDD 3 A_Chase;
      //AL15 A 0 A_CheckSight("A15Patrol");
      loop;
    A15Patrol:
      AL15 AABBCCDD 3 A_Wander;
      AL15 A 0 A_Look;
      loop;
    Missile:
      AL15 E 10 A_FaceTarget;
      //AL15 E 0 A_JumpIfCloser(360,"CancelAttack"); //Check Before attack
      AL15 E 30 A_StartSound ("BFG10kMarine/ShotStart");
      AL15 E 0 A_FaceTarget;
      //AL15 E 0 A_JumpIfCloser(360,"CancelAttack"); //Check During attack
      AL15 F 5 Bright A_CustomBulletAttack(2,2,1,30,"BFG10kMarineShot");
      AL15 F 0 A_AlertMonsters(0, AMF_TARGETEMITTER);
      AL15 E 5 A_SpidRefire;
      goto Missile+4;
    CancelAttack:
      AL15 A 0 Fast A_FaceTarget;
      AL15 DCBA 4 Fast A_Recoil(6);
      goto See;
    Pain:
      AL15 G 3;
      AL15 G 3 A_Pain;
      goto See;
    Death:
      AL15 H 3;
      AL15 I 3 A_Scream;
      AL15 JKLM 5;
      AL15 N -1 A_NoBlocking;
      Stop;
    XDeath:
      AL15 O 5;
      AL15 P 5 A_XScream;
      AL15 Q 5;
      AL15 RSTUV 5;
      AL15 W -1 A_NoBlocking;
      Stop;
  }
}

class BFG10kMarineShot : Actor
{
  Default
  {
    Radius 14;
    Height 8;
    Speed 25;
    Damage 320;
    //DamageType "BFG10k";
    Species "MarineAlly";
    DamageType "MarineAlly";
    DamageFactor "MarineAlly", 0.0;
    +NOBLOCKMAP
    +NOGRAVITY
    +ACTIVATEIMPACT
    +ACTIVATEPCROSS
    +NOTELEPORT
    +PUFFONACTORS
    +PUFFGETSOWNER
    +FORCERADIUSDMG
    +MTHRUSPECIES
    +THRUSPECIES
    +ALLOWTHRUFLAGS
    Renderstyle "Add";
    Alpha 0.75;
    SeeSound "marine/bfg10kx";
    AttackSound "marine/bfg10kx";
    DeathSound "BFG10kMarine/ShotEnd";
  }
  States
  {
    Spawn:
      BFE1 A 0 Bright;
      BFE1 A 3 Bright A_Detonate;
      BFE1 BCDEF 3 Bright;
      Stop;
  }
}

class MarineAllyFlamethrower : MarineAlly
{
  Default
  {
    //Speed 9;
    PainChance 76;
    OBITUARY "%o was toasted by an Ally's Flamethrower!";
    attacksound "Marine/flamer";
    Decal "Scorch";
    MeleeThreshold 300;
    MeleeRange 512;
    -AVOIDMELEE
  }
  States
  {
    Spawn:
      AL16 AABBCCDD 3 //A_Look;
      {
        self.TryWalk();
      }
      AL16 AABB 0 A_Look;
      loop;
    See:
      AL16 AABBCCDD 3 A_Chase;
      //AL16 A 0 A_CheckSight("A16Patrol");
      loop;
    A16Patrol:
      AL16 AABBCCDD 3 A_Wander;
      AL16 A 0 A_Look;
      loop;
    Melee:
      AL16 E 5 A_FaceTarget;
      AL16 E 5 A_StartSound("Marine/FlameReady");
      AL16 E 0 A_FaceTarget;
      AL16 F 0 A_AlertMonsters(0, AMF_TARGETEMITTER);
      AL16 F 1 Bright A_SpawnProjectile("MarineFTFire");
      AL16 F 1 Bright A_SpawnProjectile("MarineFTFire");
      AL16 F 1 Bright A_SpawnProjectile("MarineFTFire");
      AL16 F 0 A_CheckRange(530,"See");
      AL16 E 1 A_SpidRefire;
      goto Melee+3;
    Pain:
      AL16 G 5 A_Pain;
      AL16 G 3;
      goto See;
    Death:
      AL16 H 3;
      AL16 I 3 A_Scream;
      AL16 JKLM 5;
      AL16 N -1 A_NoBlocking;
      Stop;
    XDeath:
      AL16 O 5;
      AL16 P 5 A_XScream;
      AL16 Q 5;
      AL16 RSTUV 5;
      AL16 W -1;
      Stop;
  }
}

class MarineFTFire : Actor
{
  Default
  {
    Radius 2;
    Height 4;
    Speed 19;
    Damage 5;
    PROJECTILE;
    RENDERSTYLE "ADD";
    //DamageType Fire
    ALPHA 0.67;
    Scale 0.67;
    SeeSound "Marine/Flamer";
    DeathSound "Marine/Scorch";
    DONTHURTSHOOTER;
    Species "MarineAlly";
    DamageType "MarineAlly";
    DamageFactor "MarineAlly", 0.0;
    +THRUGHOST
    +FORCERADIUSDMG
    +MTHRUSPECIES
  }
  States
  {
    Spawn:
      TNT1 A 2 Bright;
      FRFX ABCD 2 Bright A_Explode(3,8);
      FRFX D 0 Bright A_Lowgravity;
      FRFX EFG 2 Bright A_Explode(3,16);
      FRFX HIJ 2 Bright A_Explode(3,32);
      FRFX KLM 2 Bright A_Explode(3,64);
      FRFX NO 2 Bright;
      Stop;
    Death:
      FRFX HIJ 2 Bright A_Explode(3,32);
      FRFX J 0 A_SpawnProjectile("MarineDropFire");
      FRFX KLM 2 Bright A_Explode(3,64);
      FRFX NO 2 Bright;
      Stop;
  }
}

class MarineDropFire : Actor
{
  Default
  {
    Radius 8;
    Height 40;
    PROJECTILE;
    RENDERSTYLE "ADD";
    //DamageType Fire
    ALPHA 0.90;
    DONTHURTSHOOTER;
    Species "MarineAlly";
    DamageType "MarineAlly";
    DamageFactor "MarineAlly", 0.0;
    -NOGRAVITY
    +LOWGRAVITY
    +NOEXPLODEFLOOR
    +NODAMAGETHRUST
    +THRUGHOST
    +MTHRUSPECIES
  }
  States
  {
    Spawn:
      FLME A 1 Bright A_StartSound("Marine/onfire");
      FLME A 1 Bright A_Explode(1,16);
      FLME BCDEFGHIJKLMN 2 Bright A_Explode(1,16);
      FLME A 1 Bright A_StartSound("Marine/onfire");
      FLME A 1 Bright A_Explode(1,32);
      FLME BCDEFGHIJKLMN 2 Bright A_Explode(1,16);
      FLME A 1 Bright A_StartSound("Marine/onfire");
      FLME A 1 Bright A_Explode(1,32);
      FLME BCDEFGHIJKLMN 2 Bright A_Explode(1,16);
      FLME A 1 Bright A_StartSound("Marine/onfire");
      FLME A 1 Bright A_Explode(1,32);
      FLME BCDEFGHIJKLMN 2 Bright A_Explode(1,16);
      FLME A 1 Bright A_StartSound("Marine/onfire");
      FLME A 1 Bright A_Explode(1,32);
      FLME BCDEFGHIJKLMN 2 Bright A_Explode(1,16);
      FLME A 0 A_Jump(192,1);
      loop;
      TNT1 A 0;
      goto death;
    Death:
      TNT1 A 1 Bright;
      Stop;
  }
}

class MarineAllySniper : MarineAlly
{
  Default
  {
    PainChance 54;
    OBITUARY "%o's Allied Sniper must be blind!!";
  }
  States
  {
    Spawn:
      AL17 AABBCCDD 3 //A_Look;
      {
        self.TryWalk();
      }
      AL17 AABB 0 A_Look;
      loop;
    See:
      AL17 AABBCCDD 3 A_Chase;
      //AL17 A 5 A_CheckSight("A17Patrol");
      Loop;
    A17Patrol:
      AL17 AABBCCDD 3 A_Wander;
      AL17 A 0 A_Look;
      loop;
    Missile:
      AL17 E 10 A_FaceTarget;
      //AL17 E 0 A_JumpIfCloser(320,"CancelAttack");
      AL17 F 0 A_StartSound("Marine/SniperFire");
      AL17 F 0 A_AlertMonsters(0,AMF_TARGETEMITTER);
      //AL17 F 10 A_CustomMissile("MarineSniperProjectile");
      AL17 F 10 A_CustomBulletAttack(0, 0, 1, random(79,161), "MarineAllyCustomBulletPuff");
      AL17 E 10 A_StartSound("Marine/SniperReload");
      AL17 E 10 A_FaceTarget;
      AL17 E 10 A_CposRefire;
      goto Missile+1;
    CancelAttack: //Cancels intended to be a Sniper (obviously) & avoid close range combat earlier.
      AL17 A 0 Fast A_FaceTarget;
      AL17 DCBA 4 Fast A_Recoil(6);
      goto See;
    Pain:
      AL17 G 3;
      AL17 G 3 A_Pain;
      goto See;
    Death:
      AL17 H 3;
      AL17 I 3 A_Scream;
      AL17 J 3 A_NoBlocking;
      AL17 KLM 3;
      AL17 N -1;
      Stop;
    XDeath:
      AL17 O 5;
      AL17 P 5 A_XScream;
      AL17 Q 5 A_NoBlocking;
      AL17 RSTUVW 5;
      AL17 X -1;
      Stop;
  }
}

/*class MarineSniperProjectile : Actor
{
  Default
  {
    Scale 0.375;
    Height 5;
    Radius 8;
    //Damage Random(80, 160);
    //Speed 90;
    Projectile;
    Species "MarineAlly";
    DamageType "MarineAlly";
    DamageFactor "MarineAlly", 0.0;
    +NoExtremeDeath
    +BloodSplatter
    +MTHRUSPECIES
    +THRUSPECIES
    +ALLOWTHRUFLAGS
    Decal "Bulletchip";
  }
  States
  {
    Spawn:
      PROJ A 1 A_SpawnItemEx("MarineSniperTrail", -(Vel.X*1.05), -(Vel.Y*1.05), (Vel.Z*-1.05), (Vel.X*0.95), (Vel.Y*0.95), (Vel.Z*0.95), -Angle, 138);
      PROJ A 0 A_StartSound("Marine/SniperBulletloop");
      Loop;
    Death:
    Crash:
      PUFF A 0 A_StopSound(7);
      PUFF A 0 A_StartSound("Marine/SniperWallHit", 6);
      PUFF ABCD 4;
      Stop;
    XDeath:
      TNT1 A 0 A_StopSound(7);
      TNT1 A 1 A_StartSound("Marine/SniperFleshHit", 6);
      Stop;
  }
}

class MarineSniperTrail : Actor
{
  Default
  {
    +Missile
    +NoBlockMap
    +NoGravity
    RenderStyle "Translucent";
    Alpha 0.5;
    Scale 0.5;
    Damage 5;
  }
  States
  {
    Spawn:
      TNT1 A 1;
      PUFF CD 4;
      Stop;
    Death:
      TNT1 A 1;
      Stop;
  }
}*/

class CaptiveAlly : SwitchableDecoration
{
  Default
  {
    Radius 40; //Minimum Activation distance. See CAPTIVES for more Info.
    Height 56; //Set to match the Allied Marines for better postioning with height checks
    Health 100;
    Mass 9001;
    PAINSOUND "Ally/Pain";
    DEATHSOUND "Ally/Death";
    //dropItem "Stimpack";
    //dropItem "Stimpack";
    +SOLID
    +SHOOTABLE
    +USESPECIAL //Please read CAPTIVES for more info on setting Captives up.
    +FLOORCLIP
  }
  States
  {
    Spawn:
      BDOM A 6;
      Loop;
    Pain:
      BDOM A 6 A_Pain;
    Death:
      TNT1 A 0 A_GiveInventory("SpawnerAlly",1);
      TNT1 A 0 A_Fall;
      BDOM B 6 A_Scream;
      BDOM CD 6;
      BDOM E -1;
      goto Inactive;
    Active:
      TNT1 A 0 A_JumpIfInventory("SpawnerAlly",1,"Inactive");
      TNT1 A 0
      {
        bSolid = false;
      }
      CPTV F 10;
      goto Freedom;
    Inactive:
      BDOM E -1;
      Stop;
    Freedom:
      TNT1 A 0 A_GiveInventory("SpawnerAlly",1);
      CPTV F 20 A_Jump(256,"Freedom1","Freedom2","Freedom3","Freedom4","Freedom5","Freedom6","Freedom7","Freedom8","Freedom9");
    Freedom1:
      TNT1 A 0 A_SpawnItemEX("MarineAllyFist",0,0,16);
      Stop;
    Freedom2:
      TNT1 A 0 A_SpawnItemEX("MarineAllyPistol",0,0,16);
      Stop;
    Freedom3:
      TNT1 A 0 A_SpawnItemEX("MarineAllyMG",0,0,16);
      Stop;
    Freedom4:
      TNT1 A 0 A_SpawnItemEX("MarineAllyCG",0,0,16);
      Stop;
    Freedom5:
      TNT1 A 0 A_SpawnItemEX("MarineAllySG",0,0,16);
      Stop;
    Freedom6:
      TNT1 A 0 A_SpawnItemEX("MarineAllyMinigun",0,0,16);
      Stop;
    Freedom7:
      TNT1 A 0 A_SpawnItemEX("MarineAllyChainsaw",0,0,16);
      Stop;
    Freedom8:
      TNT1 A 0 A_SpawnItemEX("MarineAllyPlasma",0,0,16);
      Stop;
    Freedom9:
      TNT1 A 0 A_SpawnItemEX("MarineAllySSG",0,0,16);
      Stop;
  }
}

class SpawnerAlly : Inventory { Default { Inventory.MaxAmount 99; } }
//Given after Activation or on Death so you can't activate a dead Captive Marine

class MarineAlly : Actor {

  Default{
    Species "MarineAlly";
    DamageType "MarineAlly";
    DamageFactor "MarineAlly", 0.0;
    Health 400;
    GibHealth -45;
    Radius 20;
    Height 56;
    Speed 30;
    PainChance 64;
    SEESOUND "Ally/Site";
    ATTACKSOUND "ALPist/FIRE";
    PAINSOUND "Ally/Pain";
    DEATHSOUND "Ally/Death";
    ACTIVESOUND "Ally/Active";
    //dropItem "Clip";
    Decal "BulletChip";
    MaxTargetRange 2048;
    MaxStepHeight 32;
    MaxDropoffHeight 64;
    MONSTER;
    +FLOORCLIP
    +FRIENDLY
    +QUICKTORETALIATE
    +SLIDESONWALLS
    +JUMPDOWN
    +NODROPOFF
    +PUSHABLE
    +NOBLOCKMONST
    -COUNTKILL
    +AVOIDMELEE
    +THRUSPECIES
    +ALWAYSFAST
    +MISSILEMORE
    +MISSILEEVENMORE
    -HARMFRIENDS
    +DONTHARMSPECIES
  }

}

class MarineAllyCustomBulletPuff : BulletPuff
{
  Default
  {
    Species "MarineAlly";
    DamageType "MarineAlly";
    DamageFactor "MarineAlly", 0.0;
    +MTHRUSPECIES
    +THRUSPECIES
    +ALLOWTHRUFLAGS
  }
}

class MarineAllyCustomRocket: Rocket
{
  Default
  {
    Species "MarineAlly";
    DamageType "MarineAlly";
    DamageFactor "MarineAlly", 0.0;
    +MTHRUSPECIES
  }
}

class MarineAllyCustomBFGBall: BFGBall
{
  Default
  {
    Species "MarineAlly";
    DamageType "MarineAlly";
    DamageFactor "MarineAlly", 0.0;
    +MTHRUSPECIES
    +THRUSPECIES
    +ALLOWTHRUFLAGS
    +DONTHARMSPECIES
    -HARMFRIENDS
  }
  States
	{
    Spawn:
      BFS1 AB 4 Bright;
      Loop;
    Death:
      BFE1 AB 8 Bright;
      BFE1 C 8 Bright A_BFGSpray;
      BFE1 DEF 8 Bright;
      Stop;
	}
}

class MarineAllyCustomBFGExtra : BFGExtra replaces BFGExtra 
{
	Default
	{
		+NOBLOCKMAP
		+NOGRAVITY
		+ZDOOMTRANS
    +MTHRUSPECIES
		RenderStyle "Add";
		Alpha 0.75;
		DamageType "MarineAlly";
    DamageFactor "MarineAlly", 0.0;
    Species "MarineAlly";
    +DONTHARMSPECIES
	}
	States
	{
	Spawn:
		BFE2 ABCD 8 Bright;
		Stop;
	}
}

class MarineAllyCustomPlasmaBall: PlasmaBall
{
  Default
  {
    Species "MarineAlly";
    DamageType "MarineAlly";
    DamageFactor "MarineAlly", 0.0;
    +MTHRUSPECIES
  }
}

class MarineAllyFist : MarineAlly
{  
  Default
  {
    Health 800;
    //Speed 30;
    PainChance 34;
    OBITUARY "%o was punched in the face!";
    MeleeThreshold 64;
    MeleeRange 64;
    MaxStepHeight 42;
    MaxDropoffHeight 64;
    -AVOIDMELEE
  }
  States
  {
    Spawn: //Spawn & Wait like standard Monsters
      ALY1 AABB 0 A_Look;
      loop;
    See:
      ALY1 AABBCCDD 3 A_Chase;
      //ALY1 A 0 A_CheckSight("A01Patrol");//If target gets out of sight or dies after attacking, restarts patroling.
      loop;
    A01Patrol: //Numbered by each Marine's number to avoid "Double Defenitions"
      ALY1 AABBCCDD 3 A_Wander;
      ALY1 A 0 A_Look;
      Loop;
    Melee:
      ALY1 E 3 A_FaceTarget;
      ALY1 E 3 A_AlertMonsters(0, AMF_TARGETEMITTER);
      ALY1 F 5 A_CustomMeleeAttack(random(3, 10) * 8,"Ally/PunchImpact","Ally/Fist","MarineAlly");
      ALY1 E 5 A_Jump(64,"Missile"); //Might follow through with a jump & punch attack
      ALY1 A 3;
      goto See;
    Missile:
      ALY1 A 10 A_FaceTarget;
      ALY1 E 3 A_AlertMonsters(0, AMF_TARGETEMITTER);
      ALY1 A 5 A_StartSound("Ally/PunchChargeReady");
      ALY1 E 5 A_FaceTarget;
      ALY1 E 0 A_StartSound("Ally/PunchChargeJump");
      ALY1 A 10 A_SkullAttack;
      ALY1 E 5 A_Gravity;
      ALY1 E 0 A_FaceTarget;
      ALY1 F 5 A_CustomMeleeAttack(random(3, 10) * 8,"Ally/PunchImpact","Ally/Fist","MarineAlly");
      ALY1 E 5 A_FaceTarget;
      ALY1 F 5 A_CustomMeleeAttack(random(3, 10) * 8,"Ally/PunchImpact","Ally/Fist","MarineAlly");
      goto See;
    Pain:
      ALY1 G 5 A_Pain;
      ALY1 G 3;
      goto See;
    Death:
      ALY1 H 3;
      ALY1 I 3 A_Scream;
      ALY1 J 3;
      ALY1 KLM 5;
      ALY1 N -1 A_NoBlocking;
      Stop;
    XDeath:
      ALY1 O 5;
      ALY1 P 5 A_XScream;
      ALY1 QRSTUV 5;
      ALY1 W -1 A_NoBlocking;
      Stop;
  }
}

/*class PatrolPointDeleter : Inventory
{
  override void DoEffect()
  {    
    if(owner.target && owner.target != owner.goal && owner.goal != null)
    {
      SpawnMarineEventHandler Event;
      Event = SpawnMarineEventHandler(EventHandler.Find("SpawnMarineEventHandler"));
      if(Event)
      {
        owner.goal = null;
        /*if(Event.pp != null)
        {
          Event.pp.RemoveFromHash();
          Event.pp.Destroy();
        }
        owner.setInventory("PatrolPointDeleter", 0);
      }
    }
  }
}*/

class MyDoomGuy : DoomPlayer {
  Default{
    +THRUACTORS
  }
}
